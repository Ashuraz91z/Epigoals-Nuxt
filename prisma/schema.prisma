datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid()) @map("_id") @db.Uuid
  username  String   @unique
  email     String   @unique
  password  String
  MMR       Int      @default(0)
  EPI       Int      @default(0)
  victories Int      @default(0)
  defeats   Int      @default(0)
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  equipe1   Equipe1[]
  equipe2   Equipe2[]
  confirmations Confirmation[]
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

model Match {
  id            String         @id @default(uuid()) @map("_id") @db.Uuid
  equipe1       Equipe1[]
  equipe2       Equipe2[]
  winner        Winner?
  scoreEquipe1  Int
  scoreEquipe2  Int
  date          DateTime       @default(now())
  confirmations Confirmation[]
  estConfirme   Boolean        @default(false)
}

enum Winner {
  EQUIPE1
  EQUIPE2
}

model Equipe1 {
  id      String @id @default(uuid()) @map("_id") @db.Uuid
  user    User   @relation(fields: [userId], references: [id])
  userId  String @db.Uuid
  match   Match  @relation(fields: [matchId], references: [id])
  matchId String @db.Uuid
  asWin   Boolean?
}

model Equipe2 {
  id      String @id @default(uuid()) @map("_id") @db.Uuid
  user    User   @relation(fields: [userId], references: [id])
  userId  String @db.Uuid
  match   Match  @relation(fields: [matchId], references: [id])
  matchId String @db.Uuid
  asWin   Boolean? //pb avec la creation pour prendre en compte directmeent le winner
}

model Confirmation {
  id      String @id @default(uuid()) @map("_id") @db.Uuid
  user    User   @relation(fields: [userId], references: [id])
  userId  String @db.Uuid
  match   Match  @relation(fields: [matchId], references: [id])
  matchId String @db.Uuid
}
